services:
  postgres:
    profiles: ["dev", "test", "prod"]
    image: postgres:16-alpine
    container_name: rik_proovitoo_postgres
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_DB=rik_proovitöö
      - POSTGRES_USER=rik_proovitöö
      - POSTGRES_PASSWORD=rik_proovitöö
      - POSTGRES_INITDB_ARGS=--data-checksums
    volumes:
      - ./initdb:/docker-entrypoint-initdb.d
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U rik_proovitöö" ]
      interval: 5s
      timeout: 5s
      retries: 5

  rik_proovitoo_dev:
    profiles: ["dev"]
    build:
      context: .
      target: development
    image: laurielias/rik_proovitoo:dev
    container_name: rik_proovitoo_dev
    ports:
      - '8000:8000'
    volumes:
      - .:/home/docker/rik_proovitöö
    environment:
      - DJANGO_ENV=development
    depends_on:
      - postgres

  rik_proovitoo_test:
    profiles: ["test"]
    build:
      context: .
      target: development
    image: laurielias/rik_proovitoo:test
    container_name: rik_proovitoo_test
    environment:
      - DJANGO_ENV=test
    depends_on:
      - postgres
    command: pytest

  rik_proovitoo_prod:
    profiles: ["prod"]
    build:
      context: .
      target: production
    image: laurielias/rik_proovitoo:latest
    container_name: rik_proovitoo_prod
    volumes:
      - ./run:/home/docker/rik_proovitöö/run
    environment:
      - DJANGO_ENV=production
    depends_on:
      - postgres